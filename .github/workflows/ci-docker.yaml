name: build-deploy (reusable)

on:
  workflow_call:
    inputs:
      registry_profile:
        description: Select which registry credentials to use (e.g., s9, wisewell)
        required: false
        type: string
        default: s9
      app_name:
        description: Application name (used for image name and Helm release)
        required: true
        type: string
      version:
        description: Version label used in image tag (e.g., staging, prod)
        required: false
        default: staging
        type: string
      docker_registry:
        description: Container registry base (e.g., registry.digitalocean.com/sf9cr)
        required: false
        default: registry.digitalocean.com/sf9cr
        type: string
      build_context:
        description: Docker build context
        required: false
        default: .
        type: string
      dockerfile:
        description: Path to Dockerfile
        required: false
        default: Dockerfile
        type: string
    secrets:
      registry_username:
        required: true
      registry_token:
        required: true

env:
  VERSION: ${{ inputs.version }}
  APP_NAME: ${{ inputs.app_name }}

concurrency:
  group: ${{ inputs.app_name }}-${{ inputs.version }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.registry_profile }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        shell: bash
        env:
          ENV_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
          DEFAULT_REGISTRY: ${{ inputs.docker_registry }}
          REGISTRY_USERNAME: ${{ secrets.registry_username }}
          REGISTRY_TOKEN: ${{ secrets.registry_token }}
        run: |
          set -euo pipefail
          EFFECTIVE_REGISTRY="${ENV_REGISTRY:-}"; if [ -z "$EFFECTIVE_REGISTRY" ]; then EFFECTIVE_REGISTRY="$DEFAULT_REGISTRY"; fi
          if [ -z "$EFFECTIVE_REGISTRY" ]; then echo "Effective registry is empty." >&2; exit 1; fi
          if [ -z "${REGISTRY_USERNAME}" ] || [ -z "${REGISTRY_TOKEN}" ]; then
            echo "Registry credentials are not set for environment '${{ inputs.registry_profile }}'." >&2
            exit 1
          fi
          environment: ${{ inputs.registry_profile }}
          echo "$REGISTRY_TOKEN" | docker login "$EFFECTIVE_REGISTRY" -u "$REGISTRY_USERNAME" --password-stdin
          echo "EFFECTIVE_REGISTRY=$EFFECTIVE_REGISTRY" >> "$GITHUB_ENV"

      - name: Build and push image
        shell: bash
        env:
          CTX: ${{ inputs.build_context }}
          FILE: ${{ inputs.dockerfile }}
          APP: ${{ inputs.app_name }}
          VER: ${{ inputs.version }}
          RUN: ${{ github.run_number }}
        run: |
          set -euo pipefail
          docker buildx build \
            --file "$FILE" \
            --push \
            --tag "$EFFECTIVE_REGISTRY/$APP:github-$VER" \
            --tag "$EFFECTIVE_REGISTRY/$APP:github-$RUN" \
            "$CTX"
