name: 'Setup Next.js for Cloudflare Workers'
description: 'Configures Next.js project for Cloudflare Workers deployment'
author: 'Simplify9'

inputs:
  package-manager:
    description: 'Package manager to use (npm, yarn, pnpm)'
    required: false
    default: 'npm'

outputs:
  setup-status:
    description: 'Status of the setup process'
    value: ${{ steps.setup.outputs.status }}

runs:
  using: 'composite'
  steps:
    - name: Install Cloudflare Next.js adapter
      shell: bash
      run: |
        echo "📦 Installing Cloudflare Next.js adapter..."
        
        case "${{ inputs.package-manager }}" in
          npm)
            npm install --save-dev @cloudflare/next-on-pages wrangler
            ;;
          yarn)
            yarn add --dev @cloudflare/next-on-pages wrangler
            ;;
          pnpm)
            pnpm add --save-dev @cloudflare/next-on-pages wrangler
            ;;
          *)
            echo "❌ Unsupported package manager: ${{ inputs.package-manager }}"
            exit 1
            ;;
        esac
        
        echo "✅ Cloudflare Next.js adapter installed successfully"

    - name: Configure Next.js for Workers
      shell: bash
      run: |
        echo "🔧 Configuring Next.js for Cloudflare Workers deployment..."
        
        # Fix image optimization for Workers compatibility
        if [ -f "next.config.js" ]; then
          if grep -q "unoptimized.*false" next.config.js; then
            echo "Fixing image optimization for Workers..."
            sed -i.bak 's/unoptimized: false/unoptimized: true/g' next.config.js
            echo "✅ Fixed image optimization setting"
          fi
        fi
        
        # Check for TypeScript config
        if [ -f "next.config.ts" ]; then
          if grep -q "unoptimized.*false" next.config.ts; then
            echo "Fixing image optimization for Workers..."
            sed -i.bak 's/unoptimized: false/unoptimized: true/g' next.config.ts
            echo "✅ Fixed image optimization setting"
          fi
        fi
        
        # Check for MJS config
        if [ -f "next.config.mjs" ]; then
          if grep -q "unoptimized.*false" next.config.mjs; then
            echo "Fixing image optimization for Workers..."
            sed -i.bak 's/unoptimized: false/unoptimized: true/g' next.config.mjs
            echo "✅ Fixed image optimization setting"
          fi
        fi
        
        echo "✅ Next.js configured for Workers deployment"

    - name: Validate Next.js configuration for Workers
      shell: bash
      id: setup
      run: |
        echo "🔧 Validating Next.js configuration for Cloudflare Workers..."
        
        # Check if next.config.js/mjs exists
        if [ -f "next.config.js" ] || [ -f "next.config.mjs" ] || [ -f "next.config.ts" ]; then
          echo "✅ Next.js config file found"
        else
          echo "⚠️ No Next.js config file found, creating basic configuration..."
          cat > next.config.js << 'EOF'
        /** @type {import('next').NextConfig} */
        const nextConfig = {
          experimental: {
            runtime: 'edge',
          },
          // Optimize for Cloudflare Workers
          swcMinify: true,
          output: 'standalone',
        }
        
        module.exports = nextConfig
        EOF
          echo "✅ Created basic next.config.js for Workers"
        fi
        
        # Check package.json for required scripts
        if ! grep -q '"build"' package.json; then
          echo "⚠️ No build script found in package.json"
        fi
        
        echo "status=success" >> $GITHUB_OUTPUT
        echo "✅ Next.js setup for Workers completed successfully"

    - name: Display setup summary
      shell: bash
      run: |
        echo "## 🔧 Next.js Workers Setup Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Package Manager**: ${{ inputs.package-manager }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment Type**: Cloudflare Workers via @cloudflare/next-on-pages" >> $GITHUB_STEP_SUMMARY
        echo "- **Dependencies**: @cloudflare/next-on-pages, wrangler" >> $GITHUB_STEP_SUMMARY
        echo "- **Image Optimization**: Fixed for Workers compatibility" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "- Build your Next.js application" >> $GITHUB_STEP_SUMMARY
        echo "- Configure Wrangler for deployment" >> $GITHUB_STEP_SUMMARY
        echo "- Deploy to Cloudflare Workers" >> $GITHUB_STEP_SUMMARY