name: 'Configure Cloudflare Workers Project'
description: 'Generates wrangler.toml configuration and worker entry point for Next.js'
author: 'Simplify9'

inputs:
  worker-name:
    description: 'Name of the Cloudflare Worker'
    required: true
  
  compatibility-date:
    description: 'Cloudflare Workers compatibility date'
    required: false
    default: '2024-10-20'
  
  compatibility-flags:
    description: 'Cloudflare Workers compatibility flags'
    required: false
    default: 'nodejs_compat'
  
  build-command:
    description: 'Build command for the project'
    required: false
    default: 'npm run build'
  
  output-directory:
    description: 'Next.js build output directory'
    required: false
    default: '.next'
  
  custom-routes:
    description: 'Custom routes configuration (optional)'
    required: false
    default: ''
  
  environment:
    description: 'Deployment environment'
    required: false
    default: 'development'

outputs:
  config-file:
    description: 'Path to generated wrangler.toml file'
    value: ${{ steps.generate.outputs.config-file }}
  
  entry-point:
    description: 'Path to generated worker entry point'
    value: '.vercel/output/static/_worker.js'

runs:
  using: 'composite'
  steps:
    - name: Generate wrangler.toml configuration
      shell: bash
      id: generate
      run: |
        echo "📝 Generating wrangler.toml configuration..."
        
        # Create wrangler.toml
        cat > wrangler.toml << EOF
        name = "${{ inputs.worker-name }}"
        main = ".vercel/output/static/_worker.js"
        compatibility_date = "${{ inputs.compatibility-date }}"
        compatibility_flags = ["${{ inputs.compatibility-flags }}"]
        
        # Assets configuration for Next.js static files
        [site]
        bucket = ".vercel/output/static"
        
        # Default route pattern
        [[routes]]
        pattern = "*"
        zone_name = ""
        
        # Environment-specific configurations
        [env.production]
        name = "${{ inputs.worker-name }}-prod"
        
        [env.production.vars]
        NODE_ENV = "production"
        ENVIRONMENT = "production"
        
        [env.staging]
        name = "${{ inputs.worker-name }}-staging"
        
        [env.staging.vars]
        NODE_ENV = "staging"
        ENVIRONMENT = "staging"
        
        [env.development]
        name = "${{ inputs.worker-name }}-dev"
        
        [env.development.vars]
        NODE_ENV = "development"
        ENVIRONMENT = "development"
        EOF
        
        # Add custom routes if provided
        if [ -n "${{ inputs.custom-routes }}" ]; then
          echo "" >> wrangler.toml
          echo "# Custom routes configuration" >> wrangler.toml
          echo "${{ inputs.custom-routes }}" >> wrangler.toml
        fi
        
        echo "config-file=wrangler.toml" >> $GITHUB_OUTPUT
        echo "✅ Created wrangler.toml configuration"

    - name: Configure Workers Routes
      shell: bash
      run: |
        echo "� Configuring Workers routes..."
        
        # Create the output directory if it doesn't exist
        mkdir -p .vercel/output/static
        
        # Only exclude _next/static, allow CDN to serve images directly
        echo '{"version":1,"description":"Built with @cloudflare/next-on-pages","include":["/*"],"exclude":["/_next/static/*"]}' > .vercel/output/static/_routes.json
        
        echo "✅ Workers routes configured correctly"

    - name: Validate configuration
      shell: bash
      run: |
        echo "🔍 Validating worker configuration..."
        
        # Check if wrangler.toml exists and has required fields
        if [ ! -f "wrangler.toml" ]; then
          echo "❌ wrangler.toml not found"
          exit 1
        fi
        
        # Basic validation of wrangler.toml structure
        if grep -q "name.*=.*\"${{ inputs.worker-name }}\"" wrangler.toml && \
           grep -q "main.*=.*\".vercel/output/static/_worker.js\"" wrangler.toml && \
           grep -q "compatibility_date" wrangler.toml; then
          echo "✅ wrangler.toml configuration structure is valid"
        else
          echo "❌ wrangler.toml is missing required fields"
          echo "Generated wrangler.toml content:"
          cat wrangler.toml
          exit 1
        fi
        
        # Check if routes configuration was created
        if [ -f ".vercel/output/static/_routes.json" ]; then
          echo "✅ Workers routes configuration created successfully"
        else
          echo "❌ Failed to create routes configuration"
          exit 1
        fi

    - name: Display configuration summary
      shell: bash
      run: |
        echo "📋 Worker Configuration Summary:"
        echo "- Worker Name: ${{ inputs.worker-name }}"
        echo "- Environment: ${{ inputs.environment }}"
        echo "- Compatibility Date: ${{ inputs.compatibility-date }}"
        echo "- Compatibility Flags: ${{ inputs.compatibility-flags }}"
        echo "- Entry Point: .next/server/worker.js"
        echo ""
        echo "Generated wrangler.toml:"
        cat wrangler.toml
        
        echo "## ⚙️ Workers Project Configuration" >> $GITHUB_STEP_SUMMARY
        echo "- **Worker Name**: ${{ inputs.worker-name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Compatibility Date**: ${{ inputs.compatibility-date }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Entry Point**: worker.js (custom worker script)" >> $GITHUB_STEP_SUMMARY
        echo "- **Configuration**: wrangler.toml ✅" >> $GITHUB_STEP_SUMMARY