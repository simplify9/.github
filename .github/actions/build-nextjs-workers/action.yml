name: 'Build Next.js for Cloudflare Workers'
description: 'Builds Next.js application and prepares it for Cloudflare Workers deployment'
author: 'Simplify9'

inputs:
  build-command:
    description: 'Build command to run'
    required: false
    default: 'npm run build'
  
  environment:
    description: 'Environment for build (sets NODE_ENV and ENVIRONMENT)'
    required: false
    default: 'production'
  
  cloudflare-build-command:
    description: 'Cloudflare Workers build command'
    required: false
    default: 'npx @cloudflare/next-on-pages'
  
  next-build-output:
    description: 'Next.js build output directory'
    required: false
    default: '.next'
  
  workers-output-dir:
    description: 'Workers output directory'
    required: false
    default: '.vercel/output/static'
  
  worker-script-path:
    description: 'Path to the worker script file'
    required: false
    default: '.vercel/output/static/_worker.js'
  
  assets-ignore-file:
    description: 'Path to assets ignore file'
    required: false
    default: '.vercel/output/static/.assetsignore'
  
  assets-ignore-content:
    description: 'Content for assets ignore file'
    required: false
    default: '_worker.js'
  
  auto-detect-worker-path:
    description: 'Auto-detect worker script path for modern @cloudflare/next-on-pages builds'
    required: false
    default: 'true'

outputs:
  build-output:
    description: 'Path to build output directory'
    value: ${{ inputs.workers-output-dir }}
  
  worker-script:
    description: 'Path to worker script file (auto-detected or configured)'
    value: ${{ steps.detect-worker-path.outputs.worker-script-path }}
  
  assets-ignore:
    description: 'Path to assets ignore file'
    value: ${{ inputs.assets-ignore-file }}
  
  detected-worker-path:
    description: 'Auto-detected worker script path'
    value: ${{ steps.detect-worker-path.outputs.worker-script-path }}

runs:
  using: 'composite'
  steps:
    - name: Build Next.js application
      shell: bash
      run: |
        echo "🏗️ Building Next.js application..."
        ${{ inputs.build-command }}
        echo "✅ Next.js build completed successfully"
      env:
        NODE_ENV: ${{ inputs.environment }}
        ENVIRONMENT: ${{ inputs.environment }}

    - name: Build for Cloudflare Workers
      shell: bash
      run: |
        echo "⚡ Converting Next.js build for Cloudflare Workers..."
        ${{ inputs.cloudflare-build-command }}
        echo "✅ Workers conversion completed successfully"

    - name: Auto-detect worker script path
      id: detect-worker-path
      shell: bash
      run: |
        echo "🔍 Detecting worker script path..."
        
        if [ "${{ inputs.auto-detect-worker-path }}" = "true" ]; then
          # Check for modern @cloudflare/next-on-pages structure (directory with index.js)
          if [ -f "${{ inputs.workers-output-dir }}/_worker.js/index.js" ]; then
            DETECTED_WORKER_PATH="${{ inputs.workers-output-dir }}/_worker.js/index.js"
            echo "📁 Detected modern structure: _worker.js/index.js"
          # Check for legacy structure (single _worker.js file)
          elif [ -f "${{ inputs.workers-output-dir }}/_worker.js" ]; then
            DETECTED_WORKER_PATH="${{ inputs.workers-output-dir }}/_worker.js"
            echo "📄 Detected legacy structure: _worker.js"
          # Fallback to configured path
          else
            DETECTED_WORKER_PATH="${{ inputs.worker-script-path }}"
            echo "⚠️ Using configured path (auto-detection failed): ${{ inputs.worker-script-path }}"
          fi
        else
          DETECTED_WORKER_PATH="${{ inputs.worker-script-path }}"
          echo "⚙️ Using configured path (auto-detection disabled): ${{ inputs.worker-script-path }}"
        fi
        
        echo "worker-script-path=$DETECTED_WORKER_PATH" >> $GITHUB_OUTPUT
        echo "✅ Worker script path: $DETECTED_WORKER_PATH"

    - name: Handle assets ignore file
      shell: bash
      run: |
        echo "📝 Handling assets ignore file..."
        
        IGNORE_FILE="${{ inputs.assets-ignore-file }}"
        
        # Check if @cloudflare/next-on-pages already created the file
        if [ -f "$IGNORE_FILE" ]; then
          echo "✅ Assets ignore file already exists (created by @cloudflare/next-on-pages)"
          echo "Current content:"
          cat "$IGNORE_FILE"
          
          # Only override if custom content is explicitly provided and different from default
          if [ "${{ inputs.assets-ignore-content }}" != "_worker.js" ]; then
            echo "🔄 Overriding with custom content..."
            echo "${{ inputs.assets-ignore-content }}" > "$IGNORE_FILE"
            echo "✅ Custom content applied"
          else
            echo "📋 Using existing content (default or auto-generated)"
          fi
        else
          echo "📝 Creating new assets ignore file..."
          # Create directory if it doesn't exist
          IGNORE_DIR=$(dirname "$IGNORE_FILE")
          mkdir -p "$IGNORE_DIR"
          
          # Create the file with specified content
          echo "${{ inputs.assets-ignore-content }}" > "$IGNORE_FILE"
          echo "✅ Assets ignore file created with content: ${{ inputs.assets-ignore-content }}"
        fi
        
        echo ""
        echo "Final assets ignore file content:"
        cat "$IGNORE_FILE"

    - name: Verify build output
      shell: bash
      run: |
        echo "🔍 Verifying build output..."
        
        if [ ! -d "${{ inputs.workers-output-dir }}" ]; then
          echo "❌ Build output directory not found: ${{ inputs.workers-output-dir }}"
          echo "Current directory contents:"
          ls -la
          exit 1
        fi
        
        if [ ! -f "${{ steps.detect-worker-path.outputs.worker-script-path }}" ]; then
          echo "❌ Worker file not found: ${{ steps.detect-worker-path.outputs.worker-script-path }}"
          echo "Output directory contents:"
          ls -la "${{ inputs.workers-output-dir }}/"
          
          # Additional debugging for modern structure
          if [ -d "${{ inputs.workers-output-dir }}/_worker.js" ]; then
            echo "Found _worker.js directory, contents:"
            ls -la "${{ inputs.workers-output-dir }}/_worker.js/"
          fi
          
          exit 1
        fi
        
        if [ ! -f "${{ inputs.assets-ignore-file }}" ]; then
          echo "❌ Assets ignore file not found: ${{ inputs.assets-ignore-file }}"
          exit 1
        fi
        
        echo "✅ Build verification completed successfully"
        echo ""
        echo "Build output summary:"
        echo "- Output directory: ${{ inputs.workers-output-dir }}"
        echo "- Worker file: ${{ steps.detect-worker-path.outputs.worker-script-path }}"
        echo "- Assets ignore: ${{ inputs.assets-ignore-file }}"
        echo ""
        echo "Files in output directory:"
        ls -la "${{ inputs.workers-output-dir }}/" | head -10

    - name: Build summary
      shell: bash
      run: |
        echo "## 🏗️ Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Command**: ${{ inputs.build-command }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Output Directory**: .vercel/output/static/" >> $GITHUB_STEP_SUMMARY
        echo "- **Worker File**: ✅ _worker.js" >> $GITHUB_STEP_SUMMARY
        echo "- **Assets Ignore**: ✅ .assetsignore" >> $GITHUB_STEP_SUMMARY
        echo "- **Conversion Tool**: @cloudflare/next-on-pages" >> $GITHUB_STEP_SUMMARY